<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Jeffrey S. Seely</title>
    <link>https://jsseely.github.io/</link>
    <description>Recent content on Jeffrey S. Seely</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 17 May 2023 15:04:48 +0800</lastBuildDate><atom:link href="https://jsseely.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Spelling Out the Equivalence of RNNs, CNNs, and Autoregressive Models in the Linear Case</title>
      <link>https://jsseely.github.io/equivalence/</link>
      <pubDate>Sun, 21 May 2023 15:47:51 +0800</pubDate>
      
      <guid>https://jsseely.github.io/equivalence/</guid>
      <description>This note spells out the equivalence of convolution, state-space, and autoregressive architectures in the linear case. We summarize the different representations of a linear dynamical system, and parameter conversions between them. This is a well-known exercise in engineering but seemingly less-known in machine learning. This note may be a useful exercise to anyone wanting to improve their intuition for sequence modeling in general, or make sense of the RNN vs CNN vs AR architecture debates in ML.</description>
    </item>
    
    <item>
      <title>Equivalence of Linear State-Space and Autoregressive Models</title>
      <link>https://jsseely.github.io/ss2ar/</link>
      <pubDate>Wed, 17 May 2023 15:04:48 +0800</pubDate>
      
      <guid>https://jsseely.github.io/ss2ar/</guid>
      <description>Recent works such as the S4 paper and the Hyena Heirarchy, have brought to light (to the ML world) the equivalence of linear state-space models and convolution models. Here, we explore the correspondence between state-sapce models and autoregressive models. This relationship can be understood via algebraic manipulations of a shift operator.
State-Space Model A linear discrete-time state-space model is represented by:
\begin{align} x(t+1) &amp;amp;= Ax(t) + Bu(t) \\ y(t) &amp;amp;= Cx(t) + Du(t) \end{align}</description>
    </item>
    
  </channel>
</rss>
